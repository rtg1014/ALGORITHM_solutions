// 최대공약수와 최소공배수
   const [a, b] = require("fs").readFileSync("/dev/stdin").toString().trim().split(" ").map(i=>parseInt(i));
let i = a;
let j = b;

while (i % j !== 0) {
    let n = i % j;
    if (n !== 0) {
        i = j;
        j = n;
    }
}
console.log(j)
console.log(a*b/j)
    
    /*
    유클리드 호제법
    유클리드 호제법이란? 

    두 수의 최대공약수를 구하는 알고리즘이다. 
    2개의 자연수 A,B 에 대해서 A를 B로 나눈 나머지를 r이라고 한다면 (단, A>B 이다), 
    A와 B의 최대공약수는 B와 r의 최대공약수와 같다. 
    이 성질에 따라 B를 r로 나눈 나머지 r` 을 구하고, 
    다시 r을 r` 로 나눈 나머지를 구하는 과정을 반복하여 나머지가 0이 되었을 때,
    나누는 수가 A와 B의 최대 공약수이다. 


    -----------------------------------

    유클리드 호제법을 이용한 풀이 

    - a,b 를 서로 나눌때, 나누어진다면 b가 최대 공약수 이다. (a>b)

    - 만약 a,b가 나누어지지 않으면 b와 a를 b로 나눈 나머지를 다시 나눈다

    - 서로가 나누어지면 a % b 가 최대공약수이다. 나누어지지 않는다면 위처럼 b와 a를 b를 나눈 나머지를 다시 나눈다.

    */